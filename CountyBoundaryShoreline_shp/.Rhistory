verboseIter = FALSE,
search = "random"),
tuneLength = 15)
model_rf_tune_auto
plot(model_rf_tune_auto)
model_rf_tune_man <- caret::train(classes ~ .,
data = train_data,
method = "rf",
preProcess = c("scale", "center"),
trControl = trainControl(method = "repeatedcv",
number = 10,
repeats = 10,
savePredictions = TRUE,
verboseIter = FALSE,
search = "random"),
tuneGrid = grid)
grid <- expand.grid(mtry = c(1:10))
model_rf_tune_man <- caret::train(classes ~ .,
data = train_data,
method = "rf",
preProcess = c("scale", "center"),
trControl = trainControl(method = "repeatedcv",
number = 10,
repeats = 10,
savePredictions = TRUE,
verboseIter = FALSE,
search = "random"),
tuneGrid = grid)
model_rf_tune_man
plot(model_rf_tune_man)
install.packages(h2o)
install.packages('h2o')
library(h2o)
h2o.init(nthreads = -1)
h2o.init(nthreads = -1)
h2o.init(nthreads = -1)
h2o.init(nthreads = -1)
if ("package:h2o" %in% search()) { detach("package:h2o", unload=TRUE) }
if ("h2o" %in% rownames(installed.packages())) { remove.packages("h2o") }
install.packages("h2o", repos=(c("http://s3.amazonaws.com/h2o-release/h2o/master/1497/R", getOption("repos"))))
library(h2o)
localH2O = h2o.init()
localH2O = h2o.init()
library(lubridate)
library(dplyr)
library(jsonlite)
library(ggplot2)
library(plotly)
library(GISTools)
library(rgdal)
setwd("~/Desktop/Programming/R/School/GA")
source('wnc_source.R')
unemp17 <- get_LAUS_data(year = 2017)
centroid <- unique(unemp17$records.fields$geo_point_2d)
nolist <- unlist(unique(unemp17$records.fields$geo_point_2d))
mat <- matrix(nolist, ncol = 2, byrow = T)
mat <- cbind(mat, unique(unemp17$records.fields$areaname))
split <- unlist(strsplit(mat[,3], ' '))
split2 <- matrix(split, byrow = T, ncol = 2)
mat <- cbind(mat, split2)
mat <- mat[order(mat[,5]),]
d <- dist(mat)
h <- hclust(d, method = 'centroid')
cut <- cutree(h, 4)
mat <- cbind(mat, cut)
grouped <- data.frame(date = unemp17$dates, unemp = unemp17$records.fields$unemp, name = unemp17$records.fields$areaname)
mat <- mat[,-1]
mat <- mat[,-1]
colnames(mat) <- c('name', 'name2', 'county', 'cut')
matdf <- as.data.frame(mat)
grouped$group <- 0
grouped <- left_join(grouped, matdf, by = 'name')
grouped$group[grouped$name2 %in% mountain] <- "Mountain"
grouped$group[grouped$name2 %in% foothills] <- "Foothills"
grouped$group[grouped$name2 %in% piedmont] <- "Piedmont"
grouped$group[grouped$name2 %in% hendersonville] <- "Hendersonville"
grouped$group[grouped$name2 %in% asheville] <- "Asheville"
grouped$group[grouped$name2 %in% western] <- "Western"
grouped2 <- grouped %>% group_by(date, group) %>% summarise(sum = sum(unemp))
c_graph <- ggplot(data = grouped2, aes(x = date, y = sum, colour = group)) +
geom_line() + theme_minimal()
c_graph
past_ten <- function(){
unemp17 <- get_LAUS_data(2017)
unemp16 <- get_LAUS_data(2016)
unemp15 <- get_LAUS_data(2015)
unemp14 <- get_LAUS_data(2014)
unemp13 <- get_LAUS_data(2013)
unemp12 <- get_LAUS_data(2012)
unemp11 <- get_LAUS_data(2011)
unemp10 <- get_LAUS_data(2010)
unemp09 <- get_LAUS_data(2009)
unemp08 <- get_LAUS_data(2008)
unemp07 <- get_LAUS_data(2007)
return(list(unemp07,unemp08, unemp09, unemp10, unemp11, unemp12, unemp13, unemp14, unemp15, unemp16, unemp17))
}
list_yrs <- past_ten
list_yrs <- past_ten()
View(list_yrs)
unemployment <- get_unemp(list_yrs)
unemployment <- get_agg_unemp(list_yrs)
unemployment
series <- make_series(unemployment = unemployment, startyr = startyr_agg, endyr = endyr_agg, endpd = endpd_agg)
series
unemployment
plot(time_series)
make_grouped_data <- function(raw_data){
centroid <- unique(raw_data$records.fields$geo_point_2d)
nolist <- unlist(unique(raw_data$records.fields$geo_point_2d))
mat <- matrix(nolist, ncol = 2, byrow = T)
mat <- cbind(mat, unique(raw_data$records.fields$areaname))
split <- unlist(strsplit(mat[,3], ' '))
split2 <- matrix(split, byrow = T, ncol = 2)
mat <- cbind(mat, split2)
mat <- mat[order(mat[,4]),]
#dont need the clustering
#d <- dist(mat)
#h <- hclust(d, method = 'centroid')
#cut <- cutree(h, 4)
#mat <- cbind(mat, cut)
#surely some of this is redundant
grouped <- data.frame(date = raw_data$dates, unemp = raw_data$records.fields$unemp, name = raw_data$records.fields$areaname)
mat <- mat[,-1]
mat <- mat[,-1]
colnames(mat) <- c('name', 'name2', 'county')
matdf <- as.data.frame(mat)
#maybe split into a few functions
grouped$group <- 0
grouped <- left_join(grouped, matdf, by = 'name')
grouped$group[grouped$name2 %in% mountain] <- "Mountain"
grouped$group[grouped$name2 %in% foothills] <- "Foothills"
grouped$group[grouped$name2 %in% piedmont] <- "Piedmont"
grouped$group[grouped$name2 %in% hendersonville] <- "Hendersonville"
grouped$group[grouped$name2 %in% asheville] <- "Asheville"
grouped$group[grouped$name2 %in% western] <- "Western"
return(grouped)
}
make_grouped_data <- function(sets){
grouped_df_all <- data.frame()
for (raw_data in sets){
centroid <- unique(raw_data$records.fields$geo_point_2d)
nolist <- unlist(unique(raw_data$records.fields$geo_point_2d))
mat <- matrix(nolist, ncol = 2, byrow = T)
mat <- cbind(mat, unique(raw_data$records.fields$areaname))
split <- unlist(strsplit(mat[,3], ' '))
split2 <- matrix(split, byrow = T, ncol = 2)
mat <- cbind(mat, split2)
mat <- mat[order(mat[,4]),]
#dont need the clustering
#d <- dist(mat)
#h <- hclust(d, method = 'centroid')
#cut <- cutree(h, 4)
#mat <- cbind(mat, cut)
#surely some of this is redundant
grouped <- data.frame(date = raw_data$dates, unemp = raw_data$records.fields$unemp, name = raw_data$records.fields$areaname)
mat <- mat[,-1]
mat <- mat[,-1]
colnames(mat) <- c('name', 'name2', 'county')
matdf <- as.data.frame(mat)
#maybe split into a few functions
grouped$group <- 0
grouped <- left_join(grouped, matdf, by = 'name')
grouped$group[grouped$name2 %in% mountain] <- "Mountain"
grouped$group[grouped$name2 %in% foothills] <- "Foothills"
grouped$group[grouped$name2 %in% piedmont] <- "Piedmont"
grouped$group[grouped$name2 %in% hendersonville] <- "Hendersonville"
grouped$group[grouped$name2 %in% asheville] <- "Asheville"
grouped$group[grouped$name2 %in% western] <- "Western"
grouped_df_all <- rbind(grouped_df_all,  grouped)
}
return(grouped_df_all)
}
gd <- make_goruped_data(list_yrs)
gd <- make_grouped_data(list_yrs)
View(gd)
grouped <- gd
grouped2 <- grouped %>% group_by(date, group) %>% summarise(sum = sum(unemp))
c_graph <- ggplot(data = grouped2, aes(x = date, y = sum, colour = group)) +
geom_line() + theme_minimal()
c_graph
ggplotly(c_graph)
c_graph <- ggplot(data = grouped2, aes(x = date, y = sum, colour = group)) +
geom_line() + theme_minimal() + ylim(0, 16000)
ggplotly(c_graph)
c_graph <- ggplot(data = grouped2, aes(x = date, y = sum, colour = group)) +
geom_line() + theme_minimal() + ylim(0, 20000)
ggplotly(c_graph)
View(grouped)
View(grouped2)
grouped2 <- na.omit(grouped2)
c_graph <- ggplot(data = grouped2, aes(x = date, y = sum, colour = group)) +
geom_line() + theme_minimal() + ylim(0, 20000)
ggplotly(c_graph)
c_graph <- ggplot(data = grouped2, aes(x = date, y = sum, colour = group)) +
geom_line() + theme_minimal() + ylim(0, 40000)
ggplotly(c_graph)
c_graph <- ggplot(data = grouped2, aes(x = date, y = sum, colour = group)) +
geom_line() + theme_minimal() + ylim(0, 30000)
ggplotly(c_graph)
as.character(grouped2$date[1])
c_graph <- ggplot(data = grouped2, aes(x = date, y = sum, colour = group)) +
geom_line() + theme_minimal() + ylim(0, 30000) + labs (x = 'Date', y = 'Number Unemployed', caption = "Mountain: Avery, Ashe, Alleghany, Mitchell, Watauga, Yancey")
ggplotly(c_graph)
c_graph
c_graph <- ggplot(data = grouped2, aes(x = date, y = sum, colour = group)) +
geom_line() + theme_minimal() + ylim(0, 30000) + labs (x = 'Date', y = 'Number Unemployed', caption = "Mountain: Avery, Ashe, Alleghany, Mitchell, Watauga, Yancey", legend.title = 'Group')
c_graph
unemployment
c_graph <- ggplot(data = grouped2, aes(x = date, y = sum, colour = group)) +
geom_line() + theme_minimal() + ylim(0, 30000) + labs (x = 'Date', y = 'Number Unemployed', caption = "Mountain: Avery, Ashe, Alleghany, Mitchell, Watauga, Yancey", legend.title = 'Group', colour = 'Group')
c_graph
series
plot(series)
View(grouped)
View(grouped2)
percent_change <- function(data, pd_1 = '06', pd_2 = '07'){
#data is get_LAUS_data set, pd_1 and pd_2 must be strings
pd1 <- unemp17[data$records.fields$period == pd_1,]
pd2 <- unemp17[data$records.fields$period == pd_2,]
pd1_c <- cbind(pd1$records.fields$unemprate, pd1$records.fields$areaname)
pd2_c <- cbind(pd2$records.fields$unemprate, pd2$records.fields$areaname)
pd1_o <- pd1_c[order(pd1_c[,2]),]
pd2_o <- pd2_c[order(pd2_c[,2]),]
diff <- as.numeric(pd2_o[,1]) - as.numeric(pd1_o[,1])
pct_chg <- (diff/as.numeric(pd1_o[,1])) * 100
return(pct_chg)
}
unemp17 <- get_LAUS_data(year = 2017)
pc <- percent_change(data = unemp17)
setwd("~/Downloads/CountyBoundaryShoreline_shp")
nc <- readOGR('CountyBoundaryShoreline_polys.shp')
index <- nc@data$NAME_LOCAS %in% counties_too
nc2 <- nc[index,]
nc2 <- nc2[order(nc2@data$NAME_LOCAS),]
plot(nc2)
shades <- auto.shading(change, n = 9, cutter = quantileCuts, cols = brewer.pal(9, "Reds"))
change <- pc
shades <- auto.shading(change, n = 9, cutter = quantileCuts, cols = brewer.pal(9, "Reds"))
wnc_choro <- choropleth(nc2, change, shades, main = 'Western NC Unemployment \nJuly 2017 ')
choro.legend(406832.7, 1043624, title = "Percent Change", sh = shades, cex = .55, pt.cex = .75)
percent_change <- function(data, pd_2 = max(na.omit(month(data$dates))){
#data is get_LAUS_data set, pd_1 and pd_2 must be strings
pd_1 = (pd_2 - 1)
pd1 <- data[data$records.fields$period == pd_1,]
pd2 <- data[data$records.fields$period == pd_2,]
pd1_c <- cbind(pd1$records.fields$unemprate, pd1$records.fields$areaname)
pd2_c <- cbind(pd2$records.fields$unemprate, pd2$records.fields$areaname)
pd1_o <- pd1_c[order(pd1_c[,2]),]
pd2_o <- pd2_c[order(pd2_c[,2]),]
diff <- as.numeric(pd2_o[,1]) - as.numeric(pd1_o[,1])
pct_chg <- (diff/as.numeric(pd1_o[,1])) * 100
return(pct_chg)
}
percent_change <- function(data, pd_2 = max(na.omit(month(data$dates)))){
#data is get_LAUS_data set, pd_1 and pd_2 must be strings
pd_1 = (pd_2 - 1)
pd1 <- data[data$records.fields$period == pd_1,]
pd2 <- data[data$records.fields$period == pd_2,]
pd1_c <- cbind(pd1$records.fields$unemprate, pd1$records.fields$areaname)
pd2_c <- cbind(pd2$records.fields$unemprate, pd2$records.fields$areaname)
pd1_o <- pd1_c[order(pd1_c[,2]),]
pd2_o <- pd2_c[order(pd2_c[,2]),]
diff <- as.numeric(pd2_o[,1]) - as.numeric(pd1_o[,1])
pct_chg <- (diff/as.numeric(pd1_o[,1])) * 100
return(pct_chg)
}
change <- percent_change(data = unemp17)
setwd("~/Downloads/CountyBoundaryShoreline_shp")
nc <- readOGR('CountyBoundaryShoreline_polys.shp')
index <- nc@data$NAME_LOCAS %in% counties_too
nc2 <- nc[index,]
nc2 <- nc2[order(nc2@data$NAME_LOCAS),]
plot(nc2)
shades <- auto.shading(change, n = 9, cutter = quantileCuts, cols = brewer.pal(9, "Reds"))
wnc_choro <- choropleth(nc2, change, shades, main = 'Western NC Unemployment \nJuly 2017 ')
choro.legend(406832.7, 1043624, title = "Percent Change", sh = shades, cex = .55, pt.cex = .75)
shades <- auto.shading(change, n = 9, cutter = quantileCuts, cols = brewer.pal(9, "Reds"))
shade
shades
wnc_choro <- choropleth(nc2, change, shades, main = 'Western NC Unemployment \nJuly 2017 ')
choro.legend(406832.7, 1043624, title = "Percent Change", sh = shades, cex = .55, pt.cex = .75)
max(na.omit(month(unemp17$dates)))
as.character('0' + as.character(max(na.omit(month(data$dates)))))
View(unemp17)
max(unemp17$records.fields$period)
percent_change <- function(data, pd_2 = max(unemp17$records.fields$period)){
#data is get_LAUS_data set, pd_1 and pd_2 must be strings
pd_1 = (pd_2 - 1)
pd1 <- data[data$records.fields$period == pd_1,]
pd2 <- data[data$records.fields$period == pd_2,]
pd1_c <- cbind(pd1$records.fields$unemprate, pd1$records.fields$areaname)
pd2_c <- cbind(pd2$records.fields$unemprate, pd2$records.fields$areaname)
pd1_o <- pd1_c[order(pd1_c[,2]),]
pd2_o <- pd2_c[order(pd2_c[,2]),]
diff <- as.numeric(pd2_o[,1]) - as.numeric(pd1_o[,1])
pct_chg <- (diff/as.numeric(pd1_o[,1])) * 100
return(pct_chg)
}
change <- percent_change(data = unemp17)
max(unemp17$records.fields$period)-1
as.numeric(max(unemp17$records.fields$period))
as.character(6)
paste('0', as.character(na.omit(month(data$dates))))
paste('0', as.character(max(na.omit(month(data$dates)))-1))
as.character(max(na.omit(month(data$dates)))-1)
as.character(max(na.omit(month(data$dates))))
max(na.omit(month(data$dates)))
data$dates
max(na.omit(month(unemp17$dates)))
as.character(max(na.omit(month(unemp17$dates))))
percent_change <- function(data){
#data is get_LAUS_data set, pd_1 and pd_2 must be strings
pd_1 <- paste('0', as.character(max(na.omit(month(data$dates)))-1), sep = '')
pd_2 = max(unemp17$records.fields$period)
pd1 <- data[data$records.fields$period == pd_1,]
pd2 <- data[data$records.fields$period == pd_2,]
pd1_c <- cbind(pd1$records.fields$unemprate, pd1$records.fields$areaname)
pd2_c <- cbind(pd2$records.fields$unemprate, pd2$records.fields$areaname)
pd1_o <- pd1_c[order(pd1_c[,2]),]
pd2_o <- pd2_c[order(pd2_c[,2]),]
diff <- as.numeric(pd2_o[,1]) - as.numeric(pd1_o[,1])
pct_chg <- (diff/as.numeric(pd1_o[,1])) * 100
return(pct_chg)
}
change <- percent_change(unemp17)
shades <- auto.shading(change, n = 9, cutter = quantileCuts, cols = brewer.pal(9, "Reds"))
wnc_choro <- choropleth(nc2, change, shades, main = 'Western NC Unemployment \nJuly 2017 ')
choro.legend(406832.7, 1043624, title = "Percent Change", sh = shades, cex = .55, pt.cex = .75)
setwd("~/Desktop/Programming/R/School/GA")
#setwd("~/Downloads/CountyBoundaryShoreline_shp")
nc <- readOGR('CountyBoundaryShoreline_polys.shp')
#setwd("~/Downloads/CountyBoundaryShoreline_shp")
nc <- readOGR('~/CountyBoundaryShoreline_shp/CountyBoundaryShoreline_polys.shp')
setwd('~/CountyBoundaryShoreline_shp')
setwd('/CountyBoundaryShoreline_shp')
getwd()
paste(getwd(), '/CountyBoundaryShoreline_shp', sep = '')
setwd(paste(getwd(), '/CountyBoundaryShoreline_shp', sep = ''))
nc <- readOGR('CountyBoundaryShoreline_polys.shp')
make_choropleth <- function(change, nc2 = nc2){
shades <- auto.shading(change, n = 9, cutter = quantileCuts, cols = brewer.pal(9, "Reds"))
wnc_choro <- choropleth(nc2, change, shades, main = 'Western NC Unemployment \nJuly 2017 ')
choro.legend(406832.7, 1043624, title = "Percent Change", sh = shades, cex = .55, pt.cex = .75)
}
make_choropleth(change)
make_choropleth(change, nc2 = nc2)
paste(getwd(), '/CountyBoundaryShoreline_shp', sep = '')
g <- list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
g
map_data(state='nc')
library(maps)
install.packages(maps)
install.packages('maps')
library(maps)
map_data(state='nc')
map_data(nc2)
dat <- map_data(nc2)
dat %>%
plot_geo(x = ~long, y = ~lat) %>%
add_markers(size = I(1))
dat %>%
plot_geo(x = ~long, y = ~lat, locationmode = 'USA-states') %>%
s
dat %>%
plot_geo(x = ~long, y = ~lat, locationmode = 'USA-states')
dat %>%
plot_geo(x = ~long, y = ~lat, locationmode = 'USA-states') %>%
View(dat)
View(dat)
View(nc2)
change
dat %>%
plot_geo(x = ~long, y = ~lat, locationmode = 'USA-states') %>%
add_trace(z = change, text = ~NAME)
add_trace(z = change, text = nc2@NAME)
dat %>%
plot_geo(x = ~long, y = ~lat, locationmode = 'USA-states') %>%
add_trace(z = change)
change
dat
nc <- map_data('county') %>%
filter(region == 'north carolina')
nc
percent_change <- function(data){
#data is get_LAUS_data set, pd_1 and pd_2 must be strings
pd_1 <- paste('0', as.character(max(na.omit(month(data$dates)))-1), sep = '')
pd_2 = max(unemp17$records.fields$period)
pd1 <- data[data$records.fields$period == pd_1,]
pd2 <- data[data$records.fields$period == pd_2,]
pd1_c <- cbind(pd1$records.fields$unemprate, pd1$records.fields$areaname)
pd2_c <- cbind(pd2$records.fields$unemprate, pd2$records.fields$areaname)
pd1_o <- pd1_c[order(pd1_c[,2]),]
pd2_o <- pd2_c[order(pd2_c[,2]),]
diff <- as.numeric(pd2_o[,1]) - as.numeric(pd1_o[,1])
pct_chg <- (diff/as.numeric(pd1_o[,1])) * 100
return(data.frame(pct_chg, order(pd1_c[,2])))
}
change <- percent_change(unemp17)
View(change)
percent_change <- function(data){
#data is get_LAUS_data set, pd_1 and pd_2 must be strings
pd_1 <- paste('0', as.character(max(na.omit(month(data$dates)))-1), sep = '')
pd_2 = max(unemp17$records.fields$period)
pd1 <- data[data$records.fields$period == pd_1,]
pd2 <- data[data$records.fields$period == pd_2,]
pd1_c <- cbind(pd1$records.fields$unemprate, pd1$records.fields$areaname)
pd2_c <- cbind(pd2$records.fields$unemprate, pd2$records.fields$areaname)
pd1_o <- pd1_c[order(pd1_c[,2]),]
pd2_o <- pd2_c[order(pd2_c[,2]),]
diff <- as.numeric(pd2_o[,1]) - as.numeric(pd1_o[,1])
pct_chg <- (diff/as.numeric(pd1_o[,1])) * 100
return(pct_chg)
}
unemp17$records.fields$areaname
order(unemp17$records.fields$areaname)
unemp17$records.fields$areaname[order(unemp17$records.fields$areaname),]
unemp17$records.fields$areaname[order(unemp17$records.fields$areaname),]
unemp17$records.fields$areaname[order(unemp17$records.fields$areaname), ]
View(unemp17)
unemp17$records.fields$areaname[order(unemp17$records.fields)]
unemp17$records.fields$areaname[order(unemp17$records.fields$areaname)]
percent_change <- function(data){
#data is get_LAUS_data set, pd_1 and pd_2 must be strings
pd_1 <- paste('0', as.character(max(na.omit(month(data$dates)))-1), sep = '')
pd_2 = max(unemp17$records.fields$period)
pd1 <- data[data$records.fields$period == pd_1,]
pd2 <- data[data$records.fields$period == pd_2,]
pd1_c <- cbind(pd1$records.fields$unemprate, pd1$records.fields$areaname)
pd2_c <- cbind(pd2$records.fields$unemprate, pd2$records.fields$areaname)
pd1_o <- pd1_c[order(pd1_c[,2]),]
pd2_o <- pd2_c[order(pd2_c[,2]),]
diff <- as.numeric(pd2_o[,1]) - as.numeric(pd1_o[,1])
pct_chg <- (diff/as.numeric(pd1_o[,1])) * 100
fin <- cbind(pct_chg, pd2$records.fields$areaname[order(pd2$records.fields$areaname)])
return(pct_chg)
}
change <- percent_change(unemp17)
change
percent_change <- function(data){
#data is get_LAUS_data set, pd_1 and pd_2 must be strings
pd_1 <- paste('0', as.character(max(na.omit(month(data$dates)))-1), sep = '')
pd_2 = max(unemp17$records.fields$period)
pd1 <- data[data$records.fields$period == pd_1,]
pd2 <- data[data$records.fields$period == pd_2,]
pd1_c <- cbind(pd1$records.fields$unemprate, pd1$records.fields$areaname)
pd2_c <- cbind(pd2$records.fields$unemprate, pd2$records.fields$areaname)
pd1_o <- pd1_c[order(pd1_c[,2]),]
pd2_o <- pd2_c[order(pd2_c[,2]),]
diff <- as.numeric(pd2_o[,1]) - as.numeric(pd1_o[,1])
pct_chg <- (diff/as.numeric(pd1_o[,1])) * 100
fin <- cbind(pct_chg, pd2$records.fields$areaname[order(pd2$records.fields$areaname)])
return(fin)
}
change <- percent_change(unemp17)
View(change)
order(counties_too)
fin <- cbind(change, counties_too)
View(fin)
fin <- cbind(change, lower(counties_too))
fin <- cbind(change, tolower(counties_too))
fin
View(h)
View(change)
View(fin)
View(nc)
nc_dat <- merge(nc, fin, by.x = 'V3', by.y = 'subregion')
View(fin)
names(fin) <- c('pct_chg', 'county', 'county_lower')
nc_dat <- merge(nc, fin, by.x = 'V3', by.y = 'subregion')
nc_dat <- merge(nc, fin, by.x = 'county_lower', by.y = 'subregion')
names(fin) <- c('pct_chg', 'county', 'subregion')
nc_dat <- left_join(nc, fin, by = 'subregion')
fin <- as.data.frame(fin)
nc_dat <- left_join(nc, fin, by = 'subregion')
View(fin)
names(fin) <- c('pct_chg', 'county', 'subregion')
nc_dat <- left_join(nc, fin, by = 'subregion')
View(nc_dat)
index <- nc$subregion %in% tolower(counties_too)
nc <- nc[index,]
View(nc)
nc_dat <- left_join(nc, fin, by = 'subregion')
plot(nc)
plotly(n)
plotly(nc)
plot_ly(nc)
p <- nc_dat %>%
group_by(group) %>%
plot_ly(x = ~long, y = ~lat, color = ~pct_chg, colors = shades$cols,
text = ~subregion, hoverinfo = 'text') %>%
add_polygons(line = list(width = 0.4)) %>%
add_polygons(
fillcolor = 'transparent',
line = list(color = 'black', width = 0.5),
showlegend = FALSE, hoverinfo = 'none'
) %>%
layout(
title = "% Change Unemployment",
titlefont = list(size = 10),
xaxis = list(title = "", showgrid = FALSE,
zeroline = FALSE, showticklabels = FALSE),
yaxis = list(title = "", showgrid = FALSE,
zeroline = FALSE, showticklabels = FALSE)
)
p
plot_ly(p)
p
